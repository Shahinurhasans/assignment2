import socket
import sctp

def start_sctp_client():
    """Start SCTP client and connect to server"""
    # Server configuration
    SERVER_IP = '127.0.0.1'  # Server's IP address
    SERVER_PORT = 5555             # Server's port
    
    # Create SCTP socket
    client = sctp.sctpsocket_tcp(socket.AF_INET)
    
    try:
        # Connect to server
        print(f"[CONNECTING] Connecting to {SERVER_IP}:{SERVER_PORT}...")
        print(f"[INFO] Protocol: SCTP")
        client.connect((SERVER_IP, SERVER_PORT))
        print(f"[CONNECTED] Successfully connected to server!")
        
        while True:
            # Get message from user
            message = input("\n[YOU] ")
            
            if message.lower() == 'quit':
                print("[DISCONNECTING] Closing connection...")
                break
            
            # Send message to server using SCTP
            client.sctp_send(message.encode('utf-8')) 
            print(f"Client message: {message}")
            
            # Receive response from server
            from_addr, flags, msg, notif = client.sctp_recv(1024)
            response = msg.decode('utf-8')
            print(f"Server response: {response}")
            print("-" * 50)
            
    except ConnectionRefusedError:
        print(f"[ERROR] Could not connect to {SERVER_IP}:{SERVER_PORT}")
        print("[INFO] Make sure the server is running and firewall allows the connection.")
    except Exception as e:
        print(f"[ERROR] {e}")
        print("\n[INFO] If SCTP is not supported, make sure:")
        print("  1. pysctp is installed: pip install pysctp")
        print("  2. Your OS supports SCTP (Linux has best support)")
        print("  3. SCTP kernel module is loaded (Linux: lsmod | grep sctp)")
    finally:
        client.close()
        print("[CLOSED] Connection closed.")

if __name__ == "__main__":
    start_sctp_client()
